{"version":3,"sources":["components/nft/NFTPreview.tsx","components/nft/NFTCollection.tsx","pages/Home.tsx","services/connectors.ts","components/wallet/Connect.tsx","pages/Header.tsx","pages/Docs.tsx","components/wallet/ConnectedStateProvider.tsx","components/loader/Loader.tsx","pages/NFTs.tsx","components/nft/NFTItem.tsx","pages/NFT.tsx","App.tsx","index.tsx"],"names":["NFTPreview","props","useState","image","setImage","useEffect","tokenId","fetch","then","results","json","data","className","substring","toUpperCase","src","alt","width","NFTCollection","tokenIds","map","token","index","to","exampleNfts","Home","href","Injected","InjectedConnector","supportedChainIds","Connect","useWeb3React","activate","active","deactivate","onActivate","a","onDeactivate","onClick","Header","rel","target","Docs","ConnectedStateProvider","loaded","setLoaded","isAuthorized","catch","children","Loader","abi","addresses","1","4","NFTs","chainId","account","library","symbol","setSymbol","name","setName","BigNumber","from","fee","setFee","limit","setLimit","batch","setBatch","total","setTotal","tokens","setTokens","visible","setVisible","address","undefined","getDetails","erc721","Contract","getSigner","currentLimit","mintFee","currentBatch","totalSupply","balanceOf","balance","localTokens","n","toNumber","tokenOfOwnerByIndex","push","hexZeroPad","toHexString","onClaim","mint","value","tx","console","log","wait","NFTItem","NFT","useParams","getLibrary","provider","Web3Provider","pollingInterval","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd6ca44b.chunk.js","sourcesContent":["import { useEffect, useState, FC } from \"react\";\r\n\r\nimport './../../assets/css/nftitem.css'\r\n\r\ninterface NFTItemProps {\r\n    tokenId: string;\r\n}\r\n\r\nexport const NFTPreview: FC<NFTItemProps> = props => {\r\n    const [image, setImage] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (!props?.tokenId) {\r\n            return\r\n        }\r\n\r\n        fetch(`https://us-central1-universal-stats-326006.cloudfunctions.net/metadata?tokenId=${props.tokenId}`)\r\n            .then(results => results.json())\r\n            .then(data => {\r\n                setImage(data.image)\r\n            })\r\n    });\r\n\r\n    return <div className=\"nft\">\r\n        <div>\r\n            <code>Batch {props.tokenId.substring(65)} | Type {props.tokenId.substring(0, 8).toUpperCase()}</code>\r\n        </div>\r\n        <div>\r\n            <img src={image} alt=\"\" width=\"200px\" />\r\n        </div>\r\n    </div>\r\n\r\n}","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './../../assets/css/nftitem.css'\r\nimport { NFTPreview } from './NFTPreview';\r\n\r\ninterface NFTItemProps {\r\n    tokenIds: string[];\r\n}\r\n\r\nexport const NFTCollection: FC<NFTItemProps> = props => {\r\n    return <div className=\"nft-collection\">\r\n        {props.tokenIds.map((token, index) => {\r\n            return <Link key={index} to={`/nfts/${token}`}>\r\n                <NFTPreview tokenId={token} />\r\n            </Link>\r\n        })}\r\n    </div>;\r\n}","import { NFTCollection } from \"../components/nft/NFTCollection\";\r\n\r\nconst exampleNfts = [\r\n    \"0xb9ef5bf760b707b31dd44b7bc312e87404c96ebc2e7ff9bb38601faacc65cde0\", \"0xca643a81877592fe6931e3c8ec0a507203c710573f458bae16b69b8b640c40d0\", \"0x9a390d7a5aef2f5f7f3302bfcdc721bc1f9c4c2c1a752b9677eb7ad2c5e5a340\"\r\n]\r\n\r\nexport default function Home() {\r\n    return <div>\r\n        <div className=\"center center-text\">\r\n            <h2>Actually scalable multi-purpose NFT</h2>\r\n            <br />\r\n            <br />\r\n            <p>Unique token that uses ... as it's metadata value. Users mint tokens pseudo-randomly. This token does not assume or enforce certain usage, but facilitate countless integration opportunities.</p>\r\n            <br />\r\n            <p>For more information read the <a href=\"/docs\">docs</a>.</p>\r\n            {<NFTCollection tokenIds={exampleNfts} />}\r\n        </div>\r\n    </div>;\r\n}","import { InjectedConnector } from \"@web3-react/injected-connector\";\r\n\r\nexport const Injected = new InjectedConnector({\r\n    supportedChainIds: [\r\n        1, // Mainnet\r\n        4, // Rinkeby\r\n    ],\r\n})","import { useWeb3React } from '@web3-react/core'\r\nimport { Injected } from '../../services/connectors';\r\n\r\nexport default function Connect() {\r\n    const { activate, active, deactivate } = useWeb3React()\r\n\r\n    const onActivate = async () => {\r\n        await activate(Injected)\r\n    }\r\n\r\n    const onDeactivate = async () => {\r\n        await deactivate()\r\n    }\r\n\r\n    return active ?\r\n        <button onClick={onDeactivate}>Disconnect</button> :\r\n        <button onClick={onActivate}>Connect</button>\r\n}","import { Link } from 'react-router-dom';\r\nimport Connect from '../components/wallet/Connect';\r\nimport './../assets/css/Header.css'\r\n\r\nexport default function Header() {\r\n    return <nav>\r\n        <h1><a href=\"/\">Universal Stats</a></h1>\r\n        <ul>\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            <li><Link to=\"/nfts\">NFTs</Link></li>\r\n            <li><Link to=\"/docs\">Docs</Link></li>\r\n            <li><a href=\"https://github.com/stattz/stattz.github.io\" rel=\"noreferrer\" target=\"_blank\">GitHub</a></li>\r\n            <li><Connect /></li>\r\n        </ul>\r\n    </nav>;\r\n}","export default function Docs() {\r\n    return <h2>Hello World!</h2>;\r\n}","import { useWeb3React } from \"@web3-react/core\"\r\nimport { useEffect, useState, FC } from \"react\"\r\nimport { Injected } from \"../../services/connectors\"\r\n\r\ninterface ConnectedStateProviderProps {\r\n    children: JSX.Element;\r\n}\r\n\r\nexport const ConnectedStateProvider: FC<ConnectedStateProviderProps> = props => {\r\n    const { active, activate } = useWeb3React()\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    useEffect(() => {\r\n        Injected\r\n            .isAuthorized()\r\n            .then((isAuthorized) => {\r\n                if (!loaded && isAuthorized && !active) {\r\n                    activate(Injected)\r\n                }\r\n                setLoaded(true)\r\n            })\r\n            .catch(() => {\r\n                setLoaded(true)\r\n            })\r\n    }, [loaded, activate, active])\r\n\r\n    if (loaded) {\r\n        return props.children\r\n    }\r\n\r\n    return <></>\r\n}\r\n","import './../../assets/css/loader.css'\r\n\r\nexport default function Loader() {\r\n    return <div className=\"loader\">Loading...</div>\r\n}","import { BigNumber } from \"@ethersproject/bignumber\";\r\nimport { hexZeroPad } from \"@ethersproject/bytes\";\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\n// import { formatUnits } from \"@ethersproject/units\";\r\nimport { useWeb3React } from \"@web3-react/core\"\r\nimport { useEffect, useState } from \"react\";\r\nimport Loader from \"../components/loader/Loader\";\r\nimport { NFTCollection } from \"../components/nft/NFTCollection\";\r\nimport Connect from \"../components/wallet/Connect\";\r\n\r\nconst abi = [\r\n    // Read-Only Functions\r\n    \"function symbol() view returns (string)\",\r\n    \"function name() view returns (string)\",\r\n    \"function currentLimit() view returns (uint256)\",\r\n    \"function mintFee() view returns (uint256)\",\r\n    \"function currentBatch() view returns (uint256)\",\r\n    \"function totalSupply() view returns (uint256)\",\r\n    \"function balanceOf(address owner) view returns (uint256)\",\r\n    \"function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)\",\r\n\r\n    // Authenticated Functions\r\n    \"function mint() payable\",\r\n];\r\n\r\nconst addresses: { [id: number]: string; } = {\r\n    1: \"0x4f3b15e4421902c09895fB12c8e0B8821134eA39\",\r\n    4: \"0xBF1172547b1058A1Bab585468bb7EeeD62935d4C\"\r\n};\r\n\r\nexport default function NFTs() {\r\n    const { chainId, account, library, active } = useWeb3React<Web3Provider>()\r\n\r\n    const [symbol, setSymbol] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [fee, setFee] = useState(BigNumber.from(\"0\"))\r\n    const [limit, setLimit] = useState(BigNumber.from(\"0\"))\r\n    const [batch, setBatch] = useState(BigNumber.from(\"0\"))\r\n    const [total, setTotal] = useState(BigNumber.from(\"0\"))\r\n    const [tokens, setTokens] = useState<string[]>([])\r\n\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    let address = addresses[4]\r\n\r\n    if (chainId !== undefined) {\r\n        address = addresses[chainId]\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDetails()\r\n    });\r\n\r\n    const getDetails = async () => {\r\n        if (!loaded && active && !!library) {\r\n            setLoaded(true)\r\n            setVisible(false)\r\n\r\n            const erc721 = new Contract(address, abi, library.getSigner())\r\n\r\n            setSymbol(await erc721.symbol())\r\n            setName(await erc721.name())\r\n            setLimit(await erc721.currentLimit())\r\n            setFee(await erc721.mintFee())\r\n            setBatch(await erc721.currentBatch())\r\n            setTotal(await erc721.totalSupply())\r\n\r\n            let balance = await erc721.balanceOf(account)\r\n            let localTokens = []\r\n\r\n            for (let n = 0; n < balance.toNumber(); n++) {\r\n                let tokenId = await erc721.tokenOfOwnerByIndex(account, n)\r\n                localTokens.push(hexZeroPad(tokenId.toHexString(), 32))\r\n            }\r\n\r\n            setTokens(localTokens)\r\n        }\r\n\r\n        setVisible(true)\r\n    }\r\n\r\n    const onClaim = async () => {\r\n        if (loaded) {\r\n            const erc721 = new Contract(address, abi, library?.getSigner())\r\n\r\n            let tx = await erc721.mint({ value: fee })\r\n\r\n            console.log(tx)\r\n\r\n            console.log(await tx.wait());\r\n        }\r\n    }\r\n\r\n    if (!active) {\r\n        return <div className=\"center\">\r\n            <Connect />\r\n        </div>\r\n    }\r\n\r\n    if (chainId !== 1 && chainId !== 4) {\r\n        return <div className=\"center\">\r\n            <p>Only Miannet and Rinkeby are supported</p>\r\n        </div>\r\n    }\r\n\r\n    if (!visible) {\r\n        return <div className=\"center\">\r\n            <Loader />\r\n        </div>\r\n    }\r\n\r\n    const showHowToClaim = () => {\r\n        return <div className=\"center\">\r\n            <p>\r\n                {name} ({symbol}) currently has {total.toNumber()}/{limit.toNumber()} tokens minted (Batch {batch.toNumber()})\r\n            </p>\r\n            <button onClick={onClaim}>Claim</button>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            {showHowToClaim()}\r\n            {<NFTCollection tokenIds={tokens} />}\r\n        </div>\r\n    )\r\n}","import { useEffect, useState, FC } from \"react\";\r\n\r\nimport './../../assets/css/nftitem.css'\r\n\r\ninterface NFTItemProps {\r\n    tokenId: string;\r\n}\r\n\r\nexport const NFTItem: FC<NFTItemProps> = props => {\r\n    const [image, setImage] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        if (!props?.tokenId) {\r\n            return\r\n        }\r\n\r\n        fetch(`https://us-central1-universal-stats-326006.cloudfunctions.net/metadata?tokenId=${props.tokenId}`)\r\n            .then(results => results.json())\r\n            .then(data => {\r\n                setImage(data.image)\r\n            })\r\n    });\r\n\r\n    return <div className=\"nft\">\r\n        <div>\r\n            <code>{props.tokenId} </code>\r\n        </div>\r\n        <div>\r\n            <img src={image} alt=\"\" width=\"200px\" />\r\n        </div>\r\n    </div>\r\n}","import { useParams } from \"react-router-dom\";\r\nimport { NFTItem } from \"../components/nft/NFTItem\"\r\n\r\ntype NFTParams = {\r\n    tokenId: string;\r\n}\r\n\r\nexport default function NFT() {\r\n    const { tokenId } = useParams<NFTParams>();\r\n    \r\n    return <NFTItem tokenId={tokenId} />\r\n}","import {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Header from './pages/Header';\nimport Docs from './pages/Docs';\nimport { Web3ReactProvider } from '@web3-react/core';\nimport { ExternalProvider, Web3Provider } from '@ethersproject/providers';\nimport { ConnectedStateProvider } from './components/wallet/ConnectedStateProvider';\nimport NFTs from './pages/NFTs';\nimport NFT from './pages/NFT';\n\nfunction getLibrary(provider: ExternalProvider) {\n    const library = new Web3Provider(provider)\n    library.pollingInterval = 12000\n    return library\n}\n\nexport default function App() {\n    return (\n        <Router>\n            <Web3ReactProvider getLibrary={getLibrary}>\n                <ConnectedStateProvider>\n                    <div>\n                        <Header />\n                        <div>\n                            <Switch>\n                                <Route path=\"/\" exact>\n                                    <Home />\n                                </Route>\n                                <Route path=\"/nfts\" exact>\n                                    <NFTs />\n                                </Route>\n                                <Route path=\"/nfts/:tokenId\">\n                                    <NFT />\n                                </Route>\n                                <Route path=\"/docs\">\n                                    <Docs />\n                                </Route>\n                            </Switch>\n                        </div>\n                    </div>\n                </ConnectedStateProvider>\n            </Web3ReactProvider>\n        </Router>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}